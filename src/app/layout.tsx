/*layout et le main du projet next */ 
"use client"
import localFont from "next/font/local";
import "./globals.css";
import dynamic from "next/dynamic";
import { usePathname, useRouter } from "next/navigation";
import React, { useEffect, useState } from "react";
import { Provider } from "react-redux";
import Store from "./store";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

/*export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};*/
const NoSSRSiderbar=dynamic(()=> import ('./components/sidebar'),{ssr:false})
const NoSSRHeader=dynamic(()=> import('./components/header'),{ssr:false})
const NoSSRFooter=dynamic(()=> import('./components/footer'),{ssr:false})

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router=useRouter()
  const pathname=usePathname();
  const [isAuthorized, setIsAuthorized] = useState<boolean | null>(null); 

  useEffect(() => {
    
      const user = JSON.parse(localStorage.getItem("user") || "null");
    if (!user || !user.user ) {
      if(pathname!=="/register" && pathname!=="/forget" && !pathname.startsWith("/auth/") && pathname!=="/loginRedux"){
        setIsAuthorized(false); 
        router.push('/login');
      }
    
      
    } else if (user.user.items.includes("admin")) {
      setIsAuthorized(true); 
    } else {
      setIsAuthorized(false); 
    }
  
  }, [pathname]);
  const isLoginPage=pathname==="/login"
  const isRegister=pathname==="/register"
  const isForget=pathname==="/forget"
  const isLoginRedux=pathname==='/loginRedux'

  //Permet de d√©tecter toutes les routes qui commencent par /auth/, y compris /auth/eyJhbGciOiJIUz.
  const isReset = pathname.startsWith("/auth/");
  return (
    /**provider pour redux */
    <Provider store={Store}>
    <html lang="en">
      <head>
        <title>webSite Ecommerce</title>
        <link rel="shortcut icon" type="image/png" href="../assets/images/logos/seodashlogo.png" />
        <link rel="stylesheet" href="../assets/css/styles.min.css" />
        <script src="../assets/libs/jquery/dist/jquery.min.js"></script>
        <script src="../assets/libs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
        <script src="../assets/libs/apexcharts/dist/apexcharts.min.js"></script>
        <script src="../assets/libs/simplebar/dist/simplebar.js"></script>
        <script src="../assets/js/sidebarmenu.js"></script>
        <script src="../assets/js/app.min.js"></script>
        <script src="../assets/js/dashboard.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/iconify-icon@1.0.8/dist/iconify-icon.min.js"></script>

      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {isLoginPage || isRegister || isForget || isReset ||isLoginRedux?(
            children
        ) : isAuthorized ?(
          <div className="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full" data-sidebar-position="fixed" data-header-position="fixed">
          {/* Sidebar */}
           <NoSSRSiderbar />
          {/* Main wrapper */}
          <div className="body-wrapper">
            {/* Header */}
           <NoSSRHeader />
            {/* Contenu de la page */}
            <div className="container-fluid">
        {children}
        <NoSSRFooter/>
        </div>
        </div>
        </div>
        ) :null}
        
      </body>
    </html>
    </Provider>
  );
}
